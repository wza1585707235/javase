package Day12.Inner;
/*
内部类：在一个类中，定义另外的一个类
学习：内部类的目的：为了学习匿名内部类
      在源码中需要看懂内部类
      为了学习lambda表达式和方法引用打铺垫

分类：成员内部类
            实例内部类
            静态内部类
      局部内部类
            标准的局部内部类
            匿名局部内部类

实例内部类：内部类定义在类中方法外，且没有static修饰
    修饰符 class 外部类类名{
        修饰符 class 内部类类名{
        }
    }
    实例内部类的特点：
        1.权限修饰符
            外部类：public和缺省
            内部类：四种访问权限都可以
        2.如何创建内部类对象
            外部类类名.内部类类名 内部类对象名=new 外部类类名().new 内部类类名
        3.外部类和内部类之间的访问
            内访问外：1.在内部类的实例方法中可以直接访问外部类非同名的实例成员
                      2.在内部类的实例方法中访问外部类同名的实例成员时需要固定的格式
                        外部类.this.实例成员名
                      3.在内部类可以访问外部类的私有成员
                      4.在内部类中可以访问外部类的静态成员
            外访问内：1.在外部类的实例方法中如果访问内部类实例成员时需要先创建对象，通过对象名进行访问
                      2.在外部类可以访问内部类的私有成员
                      3.在内部类中不可以定义静态成员，如果想定义静态成员，需要使用静态内部类（因为实例内部类随着对象而加载，实例内部类随着类而加载）
 */
public class InnerDemo01 {
}
